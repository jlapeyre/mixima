/* endex */

kill(a,b,c,d,i);
done$

/* too many or too few arguments */
For(a,b);
For(a,b)$

For(a,b,c,d,e);
For(a,b,c,d,e)$


( kill(i,c), c:0,  For( i:1, i<= 10, i : i+1, c:c+i), c);
55$

( kill(i,c), c:100,  For( (c:0,i:1) , i<= 10, i : i+1, c:c+i), c);
55$

/* ex ok For */
( kill(i,c), c:0, For( i:1, i<= 10, (i : i+1, c:c+i) ) , c);
65$
/* cm only three args; no body */
/* endex */

/* ex ok For */
( kill(i,c), c:0,  For( i:1, i<= 10, i : i+1,(c:c-i, if i<5 then Continue(), c:c+i)), c);
-10$
/* endex */

/* ex ok For */
( kill(i,c), c:0,  For( i:1, i<= 10, i : i+1,(c:c-i, if i>5 then Break(), c:c+i)), c);
-6$
/* endex */


/* ex ok For */
For( (c:0,i:1), i<= 10, i : i+1, (c:c+i,if i = 9 then Return(c)) );
45$
/* cm exit loop early with Return */
/* endex */

/* ex ok While */
(i : 10, c:0, While(i>0, (i:i-1,c:c+i)), c);
45$
/* endex */

/* ex ok While */
(i : 10, c:0, While( (i:i-1,c:c+i,i>0) ), c);
45$
/* cm only two args; no body */
/* endex */

/* ex ok  If  */
/* mma  If[a<b,1,0] */
If((a<b),1,0);
If(a < b,1,0) ; 
/* endex */

/* ex ok  If  */
/* mma  If[a<b,1,0,Indeterminate] */
If((a<b),1,0,Indeterminate);
Indeterminate ; 
/* endex */

/* ex br  If  */
/* mma  If[TrueQ[a<b],1,0] */
/*
If(TrueQ((a<b)),1,0);
If(TrueQ(a < b),1,0) ;
*/
/* endex */

(cat:zz, If(a>b,0,1,cat));
zz$

kill(cat,zz,a,b,c,i);
done$

/* we need more tests here: breaking from nested loops, ... */



